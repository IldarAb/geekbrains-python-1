# 3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие
# только чисел. Проверить работу исключения на реальном примере.
# Необходимо запрашивать у пользователя данные и заполнять список только числами.
# Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не
# остановит работу скрипта, введя, например, команду “stop”.
# При этом скрипт завершается, сформированный список с числами выводится на экран.
# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
# При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить
# его в список, только если введено число. Класс-исключение должен не позволить пользователю ввести
# текст (не число) и отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.

class Check(Exception):
    def __init__(self, data):
        self.data = data


my_list = []
while True:
    user_data = input('Введите число для добавления в список или "stop" для выхода из режима ввода:')

    if user_data == 'stop':
        print(f'Сформирован список: {my_list}')
        break
    try:
        if not user_data.isnumeric():
            raise Check('Вы ввели строку, для завершения ввода введите "stop" или продолжите ввод:')
        my_list.append(float(user_data))
        print(f'Текущий список:{my_list}')
    except Check as err:
        print(f'Вы ввели не число!')
